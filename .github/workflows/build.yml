name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          platforms: linux/amd64
          tags: hello:${{ github.run_number }}
          #push: true
          outputs: type=docker,dest=./build-image.tar
      - name: Copy binaries from container to host
        run: |
          docker load --input ./build-image.tar

          id=$(docker ps -q | xargs)

          copy_over() {
              echo $(docker exec $id ls -R / | grep "hello/target/$1/release" -m 1)
              #docker cp \
              #    $id:$(docker exec $id ls -R / | grep "$1/release/$2")
          }

          copy_over "x86_64-unknown-linux-gnu"
          copy_over "aarch64-unknown-linux-gnu"
          copy_over "x86_64-pc-windows-gnu"
      - name: Upload x86_64-unknown-linux-gnu artifact
        uses: actions/upload-artifact@v3
        with:
          name: hello-x86_64-linux
          path: hello-x86_64-linux
      - name: Upload aarch64-unknown-linux-gnu artifact
        uses: actions/upload-artifact@v3
        with:
          name: hello-aarch64-linux
          path: hello-aarch64-linux
      - name: Upload x86_64-pc-windows-gnu artifact
        uses: actions/upload-artifact@v3
        with:
          name: hello-x86_64-windows.exe
          path: hello-x86_64-windows.exe
